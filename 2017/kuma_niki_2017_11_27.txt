熊熊日記 (2017_11_27)
              .`!''/, ,. .  , ,, .    ,-     ,   .  
             -`'  _ `  `" `"'`~:~'~'~'":/.\,!`-./!,
             >-  :,'     ,-'  .:  ._         ., `,-`
              `.                    '       `.:  |-.
               -;    `,                 `      ," 
               ,:   "                    ,"   ;,
              -;                        `     ::
              ".                               ;
              ':  `,     ()_.---._()    ,    ,"
               =!  '`   .'    "    `.    `  ."
             .-"""-.    !    " "    !  ,-`""''.
      _____.'  .'   ;___`._`.___,'_.'_:    .'  :_______
           :_      .'                 `._     ,'
ʕ•ᴥ•ʔʕ•ᴥ•ʔʕ•ᴥ•ʔʕ•ᴥ•ʔʕ•ᴥ•ʔʕ•ᴥ•ʔʕ•ᴥ•ʔʕ•ᴥ•ʔʕ•ᴥ•ʔʕ•ᴥ•ʔʕ•ᴥ•ʔʕ•ᴥ•ʔʕ•ᴥ•ʔʕ•ᴥ•ʔʕ•ᴥ•ʔʕ•ᴥ•ʔ

今天想了一些grow的概念。包含審美視角的反饋、基於粒子與力的分布的互動式、成長型建模。
審美視角可使用機器學習的資料或者做簡單的體積平衡、照明亮度平衡，從一個視角觀看目前的grow模型，對當前模型grow狀態進行評分。
系統會依照這樣的評分給予manual的使用者繪製粒子與力的推薦、提示，或者(semi)automatic的grow(控制粒子與力)來平衡、補足能夠增加狀態評分的地方。

最早提出的軟體產品是簡易的可調參數模型。可調參數模型是由幾個參數來決定整個模型。
由於難以用簡易的公式、參數模型來達成(建模出來的模型在視覺上的)全域最佳化，因此應該多依靠grow。
用這樣的grow來解決建模全域最佳化的問題的演算法類型可以是貪婪演算法。

其中粒子與力只是一種控制grow的referent。這樣的referent也可以是界線、boundingBox、平面圖、空間中的曲線、曲面、方向、排除力、聚合力、複雜的力的型態(螺旋之類的)...。

高度隨機的項目傾向於使用大量抽象的粒子來操作，而高度被定義的項目則傾向於使用preset來進行隨機的switching、機器學習的patterning。
